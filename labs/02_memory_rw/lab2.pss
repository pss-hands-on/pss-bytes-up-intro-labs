import std_pkg::*;
import addr_reg_pkg::*;

component pss_top {

    transparent_addr_space_c<>      aspace;
    addr_handle_t                   addr_h;

    exec init_down {
        transparent_addr_region_s<> region;
        region.addr = 0x000000000;
        region.size = 0x800000000;
        addr_h = aspace.add_nonallocatable_region(region);
    }

    struct Exp {
        bit[32]     mask;
        bit[32]     value;
    }

    action Entry {
        exec body {
            bit[32]     data;
            /*
            list<Exp>   exp_data = {
                { 0xFFFF_FFFF, 0x0000_0000 }
            };
             */

            repeat (i : 4) {
                data = read32(make_handle_from_handle(comp.addr_h, 4*i));
            }
        }
    }
}